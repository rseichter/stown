---
name: Publish release to PyPI

env:
  PYTHONPATH: '.:src'

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install build requirements
        run: python -m pip install -r requirements.txt

      - name: Stamp with commit SHA
        run: |
          sha="\"$(git rev-parse --short $GITHUB_SHA)\""
          echo $sha
          sed -E -i "s/^(COMMIT_SHA =).+/\1 $sha/" src/stown/*.py

      - name: Lint source code
        run: flake8 . --config=.flake8

      - name: Run unit tests
        run: python -m unittest discover -s tests -v

      - name: Build
        run: python -m build

      - name: Upload build results
        uses: actions/upload-artifact@v4
        with:
          name: dists
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see:
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: release
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/p/stown
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/stown/${{ github.event.release.name }}

    steps:
      - name: Retrieve artifacts
        uses: actions/download-artifact@v4
        with:
          name: dists
          path: dist/

      - name: Publish artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true
