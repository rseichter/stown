# This workflow will install Python dependencies, run tests and lint with a
# variety of Python versions For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
---
name: Python package

env:
  PYTHONPATH: '.:src'

on:
  pull_request:
    branches: ['master']
  push:
    branches: ['master', 'ci-*']
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        # python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install -y tree
          python -m pip install --upgrade pip
          python -m pip install build flake8 wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          sed -E -i "s/(^EPILOG =.+})/\1 ($GITHUB_SHA)/" src/stown/*.py
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --config=.flake8 --select=E9,F63,F7,F82
          flake8 . --config=.flake8 --exit-zero
      - name: Unit tests
        run: |
          python -m unittest discover -s tests
      - name: Build distributions
        run: |
          python -m build
      - name: Upload distributions
        # See https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}.zip
          path: dist/
          compression-level: 0
          if-no-files-found: error
